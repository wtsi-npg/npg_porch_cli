{"openapi":"3.1.0","info":{"title":"Pipeline Orchestration (POrch)","version":"0.1.0"},"paths":{"/pipelines/":{"get":{"tags":["pipelines"],"summary":"Get information about all pipelines.","description":"Returns a list of pydantic Pipeline models.\n    A uri and/or version filter can be used.\n    A valid token issued for any pipeline is required for authorisation.","operationId":"get_pipelines_pipelines__get","security":[{"HTTPBearer":[]}],"parameters":[{"name":"uri","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Uri"}},{"name":"version","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Version"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Pipeline"},"title":"Response Get Pipelines Pipelines  Get"}}}},"403":{"description":"Not authorised"},"500":{"description":"Unexpected error"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["pipelines"],"summary":"Create one pipeline record.","description":"Using JSON data in the request, creates a new pipeline record.\n    A valid special power user token is required for authorisation.","operationId":"create_pipeline_pipelines__post","security":[{"HTTPBearer":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pipeline"}}}},"responses":{"201":{"description":"Pipeline was created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pipeline"}}}},"403":{"description":"Not authorised"},"500":{"description":"Unexpected error"},"400":{"description":"Insufficient pipeline properties provided"},"409":{"description":"Pipeline already exists"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pipelines/{pipeline_name}":{"get":{"tags":["pipelines"],"summary":"Get information about one pipeline.","description":"Returns a single pydantic Pipeline model if found.\n    A valid token issued for any pipeline is required for authorisation.","operationId":"get_pipeline_pipelines__pipeline_name__get","security":[{"HTTPBearer":[]}],"parameters":[{"name":"pipeline_name","in":"path","required":true,"schema":{"type":"string","title":"Pipeline Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pipeline"}}}},"403":{"description":"Not authorised"},"500":{"description":"Unexpected error"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/":{"get":{"tags":["tasks"],"summary":"Returns all tasks, and can be filtered to task status or pipeline name","description":"Return all tasks. The list of tasks can be filtered by supplying a pipeline\n    name and/or task status","operationId":"get_tasks_tasks__get","security":[{"HTTPBearer":[]}],"parameters":[{"name":"pipeline_name","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Pipeline Name"}},{"name":"status","in":"query","required":false,"schema":{"anyOf":[{"$ref":"#/components/schemas/TaskStateEnum"},{"type":"null"}],"title":"Status"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Task"},"title":"Response Get Tasks Tasks  Get"}}}},"403":{"description":"Not authorised"},"500":{"description":"Unexpected error"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["tasks"],"summary":"Creates one task record.","description":"Given a Task object, creates a database record for it and returns\n    the same object, the response HTTP status is 201 'Created'. The\n    new task is assigned pending status, ie becomes available for claiming.\n\n    The pipeline specified by the `pipeline` attribute of the Task object\n    should exist. If it does not exist, return status 404 'Not found'.","operationId":"create_task_tasks__post","security":[{"HTTPBearer":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Task"}}}},"responses":{"201":{"description":"Task creation was successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Task"}}}},"403":{"description":"Not authorised"},"500":{"description":"Unexpected error"},"409":{"description":"A task with the same signature already exists"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["tasks"],"summary":"Update one task.","description":"Given a Task object, updates the status of the task in the database\n    to the value of the status in this Task object.\n\n    If the task does not exist, status 404 'Not found' is returned.","operationId":"update_task_tasks__put","security":[{"HTTPBearer":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Task"}}}},"responses":{"200":{"description":"Task was modified","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Task"}}}},"403":{"description":"Not authorised"},"500":{"description":"Unexpected error"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/claim":{"post":{"tags":["tasks"],"summary":"Claim tasks for a particular pipeline.","description":"Arguments - the Pipeline object and the maximum number of tasks\n    to retrieve and claim, the latter defaults to 1 if not given.\n\n    If no tasks that satisfy the given criteria and are unclaimed\n    are found, returns status 200 and an empty array.\n\n    If any tasks are claimed, return an array of these Task objects\n    and status 200.\n\n    The pipeline object returned within each of the tasks is consistent\n    with the pipeline object in the payload, but has all possible\n    attributes defined (uri, version).","operationId":"claim_task_tasks_claim_post","security":[{"HTTPBearer":[]}],"parameters":[{"name":"num_tasks","in":"query","required":false,"schema":{"anyOf":[{"type":"integer","exclusiveMinimum":0},{"type":"null"}],"default":1,"title":"Num Tasks"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pipeline"}}}},"responses":{"200":{"description":"Receive a list of tasks that have been claimed","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Task"},"title":"Response Claim Task Tasks Claim Post"}}}},"403":{"description":"Not authorised"},"500":{"description":"Unexpected error"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"tags":["index"],"summary":"Web page with links to OpenAPI documentation.","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}}},"components":{"schemas":{"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"Pipeline":{"properties":{"name":{"type":"string","title":"Pipeline Name","description":"A user-controlled name for the pipeline"},"uri":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"URI","description":"URI to bootstrap the pipeline code"},"version":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Version","description":"Pipeline version to use with URI"}},"type":"object","title":"Pipeline"},"Task":{"properties":{"pipeline":{"$ref":"#/components/schemas/Pipeline"},"task_input_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Task Input ID","description":"A stringified unique identifier for a piece of work. Set by the npg_porch server, not the client"},"task_input":{"type":"object","title":"Task Input","description":"A structured parameter set that uniquely identifies a piece of work, and enables an iteration of a pipeline"},"status":{"anyOf":[{"$ref":"#/components/schemas/TaskStateEnum"},{"type":"null"}]}},"type":"object","required":["pipeline"],"title":"Task"},"TaskStateEnum":{"type":"string","enum":["PENDING","CLAIMED","RUNNING","DONE","FAILED","CANCELLED"],"title":"TaskStateEnum"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"HTTPBearer":{"type":"http","scheme":"bearer"}}},"tags":[{"name":"pipelines","description":"Manage pipelines."},{"name":"index","description":"Links to documentation."}]}